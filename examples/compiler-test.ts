/* This file was auto-generated by @typed/compiler */

import * as F from '@fp-ts/data/Function'
import { Module, buildModules, provideBrowserIntrinsics } from '@typed/framework/index.js'

import * as typedModule3 from './pages/bar/bar.js'
import * as typedModule1 from './pages/fallback.js'
import * as typedModule4 from './pages/foo/foo.js'
import * as typedModule2 from './pages/home.js'
import * as typedModule0 from './pages/layout.js'

import * as Fx from '@typed/fx/index.js'
import { renderInto } from '@typed/html/index.js'
import * as Route from '@typed/route/index.js'

const parentElementId = 'application'
const parentElement = document.getElementById(parentElementId)

if (!parentElement) {
  throw new Error(`Could not find element with id ${parentElementId}"`)
}

const matcher = buildModules([
  Module.make(typedModule2.route, () => typedModule2.main, { layout: typedModule0.layout }),
  Module.make(
    F.pipe(typedModule3.route, Route.provideLayer(typedModule3.environment)),
    F.flow(typedModule3.main, Fx.provideSomeLayer(typedModule3.environment)),
    { layout: typedModule0.layout },
  ),
  Module.make(typedModule4.route, typedModule4.main, { layout: typedModule0.layout }),
])
const main = matcher.notFound(typedModule1.fallback, { layout: typedModule0.layout })

const program = F.pipe(
  main,
  renderInto(parentElement),
  provideBrowserIntrinsics(window, { parentElement }),
)

document.addEventListener('DOMContentLoaded', () => Fx.unsafeRunAsync(program))
