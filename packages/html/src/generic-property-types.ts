import { ElementRef } from './ElementRef.js'
import { EventHandler } from './EventHandler.js'
import { Placeholder } from './Placeholder.js'

// Types used for describing properties of DOM nodes.
// These are not intended to be used directly, but rather for usage
// in an `extends` clause to allow for better types than any.

// Be careful with using these types, as they are not exhaustive
// and mostly generated by Github Copilot.

export type NodeProperties = {
  textContent?: Placeholder.AnyOf<string> | null
}

export type ElementProperties = NodeProperties & {
  className?: Placeholder.AnyOf<string>
  id?: Placeholder.AnyOf<string>
  innerHTML?: Placeholder.AnyOf<string>
  scrollLeft?: Placeholder.AnyOf<number>
  scrollTop?: Placeholder.AnyOf<number>
  slot?: Placeholder.AnyOf<string>
}

export type HTMLElementProperties<Events = HTMLElementEventMap> = ElementProperties & {
  accesskey?: Placeholder.AnyOf<string>
  contenteditable?: Placeholder.AnyOf<string>
  dir?: Placeholder.AnyOf<string>
  draggable?: Placeholder.AnyOf<boolean>
  hidden?: Placeholder.AnyOf<boolean>
  hidefocus?: Placeholder.AnyOf<boolean>
  innerText?: Placeholder.AnyOf<string>
  lang?: Placeholder.AnyOf<string>
  spellcheck?: Placeholder.AnyOf<boolean>
  style?: Placeholder.AnyOf<string>
  tabindex?: Placeholder.AnyOf<boolean>
  title?: Placeholder.AnyOf<string>
} & {
  [K in keyof Events as K extends string ? `on${Lowercase<K>}` : never]?: EventHandler<
    Events[K] & Event,
    any,
    any
  >
} & {
  [_ in `data-${string}`]: Placeholder.AnyOf<string>
} & {
  [_ in `aria-${string}`]: Placeholder.AnyOf<string>
} & {
  ref?: ElementRef<any>
}

export type HTMLAnchorElementProperties = HTMLElementProperties & {
  charset?: Placeholder.AnyOf<string>
  coords?: Placeholder.AnyOf<string>
  download?: Placeholder.AnyOf<string>
  hash?: Placeholder.AnyOf<string>
  host?: Placeholder.AnyOf<string>
  hostname?: Placeholder.AnyOf<string>
  href?: Placeholder.AnyOf<string>
  hreflang?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  pathname?: Placeholder.AnyOf<string>
  port?: Placeholder.AnyOf<string>
  protocol?: Placeholder.AnyOf<string>
  rel?: Placeholder.AnyOf<string>
  rev?: Placeholder.AnyOf<string>
  search?: Placeholder.AnyOf<string>
  shape?: Placeholder.AnyOf<string>
  target?: Placeholder.AnyOf<string>
  text?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  urn?: Placeholder.AnyOf<string>
}

export type HTMLAreaElementProperties = HTMLElementProperties & {
  alt?: Placeholder.AnyOf<string>
  coords?: Placeholder.AnyOf<string>
  download?: Placeholder.AnyOf<string>
  hash?: Placeholder.AnyOf<string>
  host?: Placeholder.AnyOf<string>
  hostname?: Placeholder.AnyOf<string>
  href?: Placeholder.AnyOf<string>
  noHref?: Placeholder.AnyOf<string>
  pathname?: Placeholder.AnyOf<string>
  port?: Placeholder.AnyOf<string>
  protocol?: Placeholder.AnyOf<string>
  rel?: Placeholder.AnyOf<string>
  search?: Placeholder.AnyOf<string>
  shape?: Placeholder.AnyOf<string>
  target?: Placeholder.AnyOf<string>
}

export type HTMLAudioElementProperties = HTMLElementProperties & {
  autoplay?: Placeholder.AnyOf<boolean>
  buffered?: Placeholder.AnyOf<string>
  controls?: Placeholder.AnyOf<boolean>
  currentSrc?: Placeholder.AnyOf<string>
  currentTime?: Placeholder.AnyOf<number>
  defaultMuted?: Placeholder.AnyOf<boolean>
  defaultPlaybackRate?: Placeholder.AnyOf<number>
  duration?: Placeholder.AnyOf<number>
  ended?: Placeholder.AnyOf<boolean>
  error?: Placeholder.AnyOf<string>
  loop?: Placeholder.AnyOf<boolean>
  mediaGroup?: Placeholder.AnyOf<string>
  muted?: Placeholder.AnyOf<boolean>
  networkState?: Placeholder.AnyOf<number>
  paused?: Placeholder.AnyOf<boolean>
  playbackRate?: Placeholder.AnyOf<number>
  played?: Placeholder.AnyOf<string>
  preload?: Placeholder.AnyOf<string>
  readyState?: Placeholder.AnyOf<number>
  seekable?: Placeholder.AnyOf<string>
  seeking?: Placeholder.AnyOf<boolean>
  src?: Placeholder.AnyOf<string>
  startDate?: Placeholder.AnyOf<string>
  volume?: Placeholder.AnyOf<number>
}

export type HTMLBRElementProperties = HTMLElementProperties & {
  clear?: Placeholder.AnyOf<string>
}

export type HTMLBaseElementProperties = HTMLElementProperties & {
  href?: Placeholder.AnyOf<string>
  target?: Placeholder.AnyOf<string>
}

export type HTMLBaseFontElementProperties = HTMLElementProperties & {
  color?: Placeholder.AnyOf<string>
  face?: Placeholder.AnyOf<string>
  size?: Placeholder.AnyOf<string>
}

export type HTMLBodyElementProperties = HTMLElementProperties<HTMLBodyElementEventMap> & {
  aLink?: Placeholder.AnyOf<string>
  background?: Placeholder.AnyOf<string>
  bgColor?: Placeholder.AnyOf<string>
  link?: Placeholder.AnyOf<string>
  text?: Placeholder.AnyOf<string>
  vLink?: Placeholder.AnyOf<string>
}

export type HTMLButtonElementProperties = HTMLElementProperties & {
  autofocus?: Placeholder.AnyOf<boolean>
  disabled?: Placeholder.AnyOf<boolean>
  form?: Placeholder.AnyOf<string>
  formAction?: Placeholder.AnyOf<string>
  formEnctype?: Placeholder.AnyOf<string>
  formMethod?: Placeholder.AnyOf<string>
  formNoValidate?: Placeholder.AnyOf<boolean>
  formTarget?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  validationMessage?: Placeholder.AnyOf<string>
  validity?: Placeholder.AnyOf<string>
  value?: Placeholder.AnyOf<string>
  willValidate?: Placeholder.AnyOf<boolean>
}

export type HTMLCanvasElementProperties = HTMLElementProperties & {
  height?: Placeholder.AnyOf<number>
  width?: Placeholder.AnyOf<number>
}

export type HTMLContentElementProperties = HTMLElementProperties & {
  select?: Placeholder.AnyOf<string>
}

export type HTMLDListElementProperties = HTMLElementProperties & {
  compact?: Placeholder.AnyOf<boolean>
}

export type HTMLDataElementProperties = HTMLElementProperties & {
  value?: Placeholder.AnyOf<string>
}

export type HTMLDataListElementProperties = HTMLElementProperties & {
  options?: Placeholder.AnyOf<string>
}

export type HTMLDetailsElementProperties = HTMLElementProperties & {
  open?: Placeholder.AnyOf<boolean>
}

export type HTMLDialogElementProperties = HTMLElementProperties & {
  open?: Placeholder.AnyOf<boolean>
}

export type HTMLDirectoryElementProperties = HTMLElementProperties & {
  compact?: Placeholder.AnyOf<boolean>
}

export type HTMLDivElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
}

export type HTMLEmbedElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLFieldSetElementProperties = HTMLElementProperties & {
  disabled?: Placeholder.AnyOf<boolean>
  form?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  validationMessage?: Placeholder.AnyOf<string>
  validity?: Placeholder.AnyOf<string>
  willValidate?: Placeholder.AnyOf<boolean>
}

export type HTMLFontElementProperties = HTMLElementProperties & {
  color?: Placeholder.AnyOf<string>
  face?: Placeholder.AnyOf<string>
  size?: Placeholder.AnyOf<string>
}

export type HTMLFormElementProperties = HTMLElementProperties & {
  acceptCharset?: Placeholder.AnyOf<string>
  action?: Placeholder.AnyOf<string>
  autocomplete?: Placeholder.AnyOf<string>
  enctype?: Placeholder.AnyOf<string>
  encoding?: Placeholder.AnyOf<string>
  length?: Placeholder.AnyOf<number>
  method?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  noValidate?: Placeholder.AnyOf<boolean>
  target?: Placeholder.AnyOf<string>
}

export type HTMLFrameElementProperties = HTMLElementProperties & {
  border?: Placeholder.AnyOf<string>
  frameBorder?: Placeholder.AnyOf<string>
  frameSpacing?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string | number>
  longDesc?: Placeholder.AnyOf<string>
  marginHeight?: Placeholder.AnyOf<string>
  marginWidth?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  noResize?: Placeholder.AnyOf<boolean>
  scrolling?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string | number>
}

export type HTMLFrameSetElementProperties = HTMLElementProperties & {
  border?: Placeholder.AnyOf<string>
  borderFrame?: Placeholder.AnyOf<string>
  cols?: Placeholder.AnyOf<string>
  frameBorder?: Placeholder.AnyOf<string>
  frameSpacing?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  rows?: Placeholder.AnyOf<string>
}

export type HTMLHRElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  color?: Placeholder.AnyOf<string>
  noShade?: Placeholder.AnyOf<boolean>
  size?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLHeadElementProperties = HTMLElementProperties & {
  profile?: Placeholder.AnyOf<string>
}

export type HTMLHeadingElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
}

export type HTMLHtmlElementProperties = HTMLElementProperties & {
  version?: Placeholder.AnyOf<string>
}

export type HTMLIFrameElementProperties = HTMLElementProperties<HTMLFrameSetElementEventMap> & {
  align?: Placeholder.AnyOf<string>
  allowfullscreen?: Placeholder.AnyOf<boolean>
  allowpaymentrequest?: Placeholder.AnyOf<boolean>
  allowusermedia?: Placeholder.AnyOf<boolean>
  csp?: Placeholder.AnyOf<string>
  frameborder?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string>
  longdesc?: Placeholder.AnyOf<string>
  marginheight?: Placeholder.AnyOf<string>
  marginwidth?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  referrerpolicy?: Placeholder.AnyOf<string>
  sandbox?: Placeholder.AnyOf<string>
  scrolling?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  srcdoc?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLImageElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  alt?: Placeholder.AnyOf<string>
  border?: Placeholder.AnyOf<string>
  complete?: Placeholder.AnyOf<boolean>
  crossorigin?: Placeholder.AnyOf<string>
  currentsrc?: Placeholder.AnyOf<string>
  decoding?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<number>
  hspace?: Placeholder.AnyOf<number>
  isMap?: Placeholder.AnyOf<boolean>
  longdesc?: Placeholder.AnyOf<string>
  lowsrc?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  naturalheight?: Placeholder.AnyOf<number>
  naturalwidth?: Placeholder.AnyOf<number>
  referrerpolicy?: Placeholder.AnyOf<string>
  sizes?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  srcset?: Placeholder.AnyOf<string>
  usemap?: Placeholder.AnyOf<string>
  vspace?: Placeholder.AnyOf<number>
  width?: Placeholder.AnyOf<number>
  x?: Placeholder.AnyOf<number>
  y?: Placeholder.AnyOf<number>
}

export type HTMLInputElementProperties = HTMLElementProperties & {
  accept?: Placeholder.AnyOf<string>
  align?: Placeholder.AnyOf<string>
  alt?: Placeholder.AnyOf<string>
  autocomplete?: Placeholder.AnyOf<string>
  autofocus?: Placeholder.AnyOf<boolean>
  border?: Placeholder.AnyOf<string>
  checked?: Placeholder.AnyOf<boolean>
  defaultChecked?: Placeholder.AnyOf<boolean>
  defaultValue?: Placeholder.AnyOf<string>
  disabled?: Placeholder.AnyOf<boolean>
  files?: Placeholder.AnyOf<FileList>
  form?: Placeholder.AnyOf<string>
  formAction?: Placeholder.AnyOf<string>
  formEnctype?: Placeholder.AnyOf<string>
  formMethod?: Placeholder.AnyOf<string>
  formNoValidate?: Placeholder.AnyOf<boolean>
  formTarget?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string | number>
  indeterminate?: Placeholder.AnyOf<boolean>
  list?: Placeholder.AnyOf<string>
  max?: Placeholder.AnyOf<string | number>
  maxLength?: Placeholder.AnyOf<number>
  min?: Placeholder.AnyOf<string | number>
  minLength?: Placeholder.AnyOf<number>
  multiple?: Placeholder.AnyOf<boolean>
  name?: Placeholder.AnyOf<string>
  pattern?: Placeholder.AnyOf<string>
  placeholder?: Placeholder.AnyOf<string>
  readonly?: Placeholder.AnyOf<boolean>
  required?: Placeholder.AnyOf<boolean>
  selectionDirection?: Placeholder.AnyOf<string>
  selectionEnd?: Placeholder.AnyOf<number>
  selectionStart?: Placeholder.AnyOf<number>
  size?: Placeholder.AnyOf<number>
  src?: Placeholder.AnyOf<string>
  step?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  useMap?: Placeholder.AnyOf<string>
  value?: Placeholder.AnyOf<string>
  valueAsDate?: Placeholder.AnyOf<Date>
  valueAsNumber?: Placeholder.AnyOf<number>
  width?: Placeholder.AnyOf<string | number>
}

export type HTMLLIElementProperties = HTMLElementProperties & {
  type?: Placeholder.AnyOf<string>
  value?: Placeholder.AnyOf<number>
}

export type HTMLLabelElementProperties = HTMLElementProperties & {
  for?: Placeholder.AnyOf<string>
  htmlFor?: Placeholder.AnyOf<string>
}

export type HTMLLegendElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
}

export type HTMLLinkElementProperties = HTMLElementProperties & {
  as?: Placeholder.AnyOf<string>
  charset?: Placeholder.AnyOf<string>
  crossorigin?: Placeholder.AnyOf<string>
  disabled?: Placeholder.AnyOf<boolean>
  href?: Placeholder.AnyOf<string>
  hreflang?: Placeholder.AnyOf<string>
  integrity?: Placeholder.AnyOf<string>
  media?: Placeholder.AnyOf<string>
  referrerpolicy?: Placeholder.AnyOf<string>
  rel?: Placeholder.AnyOf<string>
  rev?: Placeholder.AnyOf<string>
  sizes?: Placeholder.AnyOf<string>
  target?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
}

export type HTMLMapElementProperties = HTMLElementProperties & {
  name?: Placeholder.AnyOf<string>
}

export type HTMLMediaElementProperties = HTMLElementProperties & {
  autoplay?: Placeholder.AnyOf<boolean>
  controls?: Placeholder.AnyOf<boolean>
  crossorigin?: Placeholder.AnyOf<string>
  currentTime?: Placeholder.AnyOf<number>
  defaultMuted?: Placeholder.AnyOf<boolean>
  defaultPlaybackRate?: Placeholder.AnyOf<number>
  disableRemotePlayback?: Placeholder.AnyOf<boolean>
  loop?: Placeholder.AnyOf<boolean>
  mediaGroup?: Placeholder.AnyOf<string>
  muted?: Placeholder.AnyOf<boolean>
  playbackRate?: Placeholder.AnyOf<number>
  preload?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  volume?: Placeholder.AnyOf<number>
}

export type HTMLMenuElementProperties = HTMLElementProperties & {
  compact?: Placeholder.AnyOf<boolean>
  type?: Placeholder.AnyOf<string>
}

export type HTMLMetaElementProperties = HTMLElementProperties & {
  charset?: Placeholder.AnyOf<string>
  content?: Placeholder.AnyOf<string>
  httpEquiv?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
}

export type HTMLMeterElementProperties = HTMLElementProperties & {
  high?: Placeholder.AnyOf<number>
  low?: Placeholder.AnyOf<number>
  max?: Placeholder.AnyOf<number>
  min?: Placeholder.AnyOf<number>
  optimum?: Placeholder.AnyOf<number>
  value?: Placeholder.AnyOf<number>
}

export type HTMLModElementProperties = HTMLElementProperties & {
  cite?: Placeholder.AnyOf<string>
  datetime?: Placeholder.AnyOf<string>
}

export type HTMLOListElementProperties = HTMLElementProperties & {
  compact?: Placeholder.AnyOf<boolean>
  reversed?: Placeholder.AnyOf<boolean>
  start?: Placeholder.AnyOf<number>
  type?: Placeholder.AnyOf<string>
}

export type HTMLObjectElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  archive?: Placeholder.AnyOf<string>
  border?: Placeholder.AnyOf<string>
  code?: Placeholder.AnyOf<string>
  codeBase?: Placeholder.AnyOf<string>
  codeType?: Placeholder.AnyOf<string>
  data?: Placeholder.AnyOf<string>
  declare?: Placeholder.AnyOf<boolean>
  form?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string | number>
  hspace?: Placeholder.AnyOf<number>
  name?: Placeholder.AnyOf<string>
  standby?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  useMap?: Placeholder.AnyOf<string>
  vspace?: Placeholder.AnyOf<number>
  width?: Placeholder.AnyOf<string | number>
}

export type HTMLOptGroupElementProperties = HTMLElementProperties & {
  disabled?: Placeholder.AnyOf<boolean>
  label?: Placeholder.AnyOf<string>
}

export type HTMLOptionElementProperties = HTMLElementProperties & {
  defaultSelected?: Placeholder.AnyOf<boolean>
  disabled?: Placeholder.AnyOf<boolean>
  label?: Placeholder.AnyOf<string>
  selected?: Placeholder.AnyOf<boolean>
  text?: Placeholder.AnyOf<string>
  value?: Placeholder.AnyOf<string>
}

export type HTMLOutputElementProperties = HTMLElementProperties & {
  defaultValue?: Placeholder.AnyOf<string>
  htmlFor?: Placeholder.AnyOf<string>
  name?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  value?: Placeholder.AnyOf<string>
}

export type HTMLParagraphElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
}

export type HTMLParamElementProperties = HTMLElementProperties & {
  name?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
  value?: Placeholder.AnyOf<string>
  valueType?: Placeholder.AnyOf<string>
}

export type HTMLPreElementProperties = HTMLElementProperties & {
  width?: Placeholder.AnyOf<number>
}

export type HTMLProgressElementProperties = HTMLElementProperties & {
  max?: Placeholder.AnyOf<number>
  position?: Placeholder.AnyOf<number>
  value?: Placeholder.AnyOf<number>
}

export type HTMLQuoteElementProperties = HTMLElementProperties & {
  cite?: Placeholder.AnyOf<string>
}

export type HTMLScriptElementProperties = HTMLElementProperties & {
  async?: Placeholder.AnyOf<boolean>
  charset?: Placeholder.AnyOf<string>
  crossorigin?: Placeholder.AnyOf<string>
  defer?: Placeholder.AnyOf<boolean>
  integrity?: Placeholder.AnyOf<string>
  nomodule?: Placeholder.AnyOf<boolean>
  nonce?: Placeholder.AnyOf<string>
  referrerpolicy?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
}

export type HTMLSelectElementProperties = HTMLElementProperties & {
  autocomplete?: Placeholder.AnyOf<string>
  autofocus?: Placeholder.AnyOf<boolean>
  disabled?: Placeholder.AnyOf<boolean>
  form?: Placeholder.AnyOf<string>
  multiple?: Placeholder.AnyOf<boolean>
  name?: Placeholder.AnyOf<string>
  required?: Placeholder.AnyOf<boolean>
  size?: Placeholder.AnyOf<number>
  value?: Placeholder.AnyOf<string>
}

export type HTMLSlotElementProperties = HTMLElementProperties & {
  name?: Placeholder.AnyOf<string>
}

export type HTMLSourceElementProperties = HTMLElementProperties & {
  media?: Placeholder.AnyOf<string>
  sizes?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  srcset?: Placeholder.AnyOf<string>
  type?: Placeholder.AnyOf<string>
}

export type HTMLSpanElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
}

export type HTMLStyleElementProperties = HTMLElementProperties & {
  media?: Placeholder.AnyOf<string>
  nonce?: Placeholder.AnyOf<string>
  scoped?: Placeholder.AnyOf<boolean>
  type?: Placeholder.AnyOf<string>
}

export type HTMLTableCaptionElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
}

export type HTMLTableCellElementProperties = HTMLElementProperties & {
  abbr?: Placeholder.AnyOf<string>
  align?: Placeholder.AnyOf<string>
  axis?: Placeholder.AnyOf<string>
  bgcolor?: Placeholder.AnyOf<string>
  colspan?: Placeholder.AnyOf<number>
  headers?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string>
  nowrap?: Placeholder.AnyOf<boolean>
  rowspan?: Placeholder.AnyOf<number>
  scope?: Placeholder.AnyOf<string>
  valign?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLTableColElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  span?: Placeholder.AnyOf<number>
  valign?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLTableDataCellElementProperties = HTMLElementProperties & {
  abbr?: Placeholder.AnyOf<string>
  align?: Placeholder.AnyOf<string>
  axis?: Placeholder.AnyOf<string>
  bgcolor?: Placeholder.AnyOf<string>
  colspan?: Placeholder.AnyOf<number>
  headers?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string>
  nowrap?: Placeholder.AnyOf<boolean>
  rowspan?: Placeholder.AnyOf<number>
  scope?: Placeholder.AnyOf<string>
  valign?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLTableElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  bgcolor?: Placeholder.AnyOf<string>
  border?: Placeholder.AnyOf<string>
  cellpadding?: Placeholder.AnyOf<string>
  cellspacing?: Placeholder.AnyOf<string>
  frame?: Placeholder.AnyOf<string>
  rules?: Placeholder.AnyOf<string>
  summary?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLTableHeaderCellElementProperties = HTMLElementProperties & {
  abbr?: Placeholder.AnyOf<string>
  align?: Placeholder.AnyOf<string>
  axis?: Placeholder.AnyOf<string>
  bgcolor?: Placeholder.AnyOf<string>
  colspan?: Placeholder.AnyOf<number>
  headers?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<string>
  nowrap?: Placeholder.AnyOf<boolean>
  rowspan?: Placeholder.AnyOf<number>
  scope?: Placeholder.AnyOf<string>
  valign?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<string>
}

export type HTMLTableRowElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  bgcolor?: Placeholder.AnyOf<string>
  valign?: Placeholder.AnyOf<string>
}

export type HTMLTableSectionElementProperties = HTMLElementProperties & {
  align?: Placeholder.AnyOf<string>
  valign?: Placeholder.AnyOf<string>
}

export type HTMLTemplateElementProperties = HTMLElementProperties & {
  content?: Placeholder.AnyOf<string>
}

export type HTMLTextAreaElementProperties = HTMLElementProperties & {
  autocomplete?: Placeholder.AnyOf<string>
  autofocus?: Placeholder.AnyOf<boolean>
  cols?: Placeholder.AnyOf<number>
  dirname?: Placeholder.AnyOf<string>
  disabled?: Placeholder.AnyOf<boolean>
  form?: Placeholder.AnyOf<string>
  maxlength?: Placeholder.AnyOf<number>
  minlength?: Placeholder.AnyOf<number>
  name?: Placeholder.AnyOf<string>
  placeholder?: Placeholder.AnyOf<string>
  readonly?: Placeholder.AnyOf<boolean>
  required?: Placeholder.AnyOf<boolean>
  rows?: Placeholder.AnyOf<number>
  wrap?: Placeholder.AnyOf<string>
}

export type HTMLTimeElementProperties = HTMLElementProperties & {
  datetime?: Placeholder.AnyOf<string>
}

export type HTMLTitleElementProperties = HTMLElementProperties & {
  text?: Placeholder.AnyOf<string>
}

export type HTMLTrackElementProperties = HTMLElementProperties & {
  default?: Placeholder.AnyOf<boolean>
  kind?: Placeholder.AnyOf<string>
  label?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  srclang?: Placeholder.AnyOf<string>
}

export type HTMLUListElementProperties = HTMLElementProperties & {
  compact?: Placeholder.AnyOf<boolean>
  type?: Placeholder.AnyOf<string>
}

export type HTMLVideoElementProperties = HTMLElementProperties & {
  autoplay?: Placeholder.AnyOf<boolean>
  buffered?: Placeholder.AnyOf<string>
  controls?: Placeholder.AnyOf<boolean>
  crossorigin?: Placeholder.AnyOf<string>
  height?: Placeholder.AnyOf<number>
  loop?: Placeholder.AnyOf<boolean>
  muted?: Placeholder.AnyOf<boolean>
  played?: Placeholder.AnyOf<string>
  poster?: Placeholder.AnyOf<string>
  preload?: Placeholder.AnyOf<string>
  src?: Placeholder.AnyOf<string>
  width?: Placeholder.AnyOf<number>
}

// a type-level map of tag names to their properties
export type PropsMap = {
  a: HTMLAnchorElementProperties
  abbr: HTMLElementProperties
  address: HTMLElementProperties
  area: HTMLAreaElementProperties
  article: HTMLElementProperties
  aside: HTMLElementProperties
  audio: HTMLAudioElementProperties
  b: HTMLElementProperties
  base: HTMLBaseElementProperties
  bdi: HTMLElementProperties
  bdo: HTMLElementProperties
  big: HTMLElementProperties
  blockquote: HTMLQuoteElementProperties
  body: HTMLBodyElementProperties
  br: HTMLBRElementProperties
  button: HTMLButtonElementProperties
  canvas: HTMLCanvasElementProperties
  caption: HTMLTableCaptionElementProperties
  cite: HTMLElementProperties
  code: HTMLElementProperties
  col: HTMLTableColElementProperties
  colgroup: HTMLTableColElementProperties
  data: HTMLDataElementProperties
  datalist: HTMLDataListElementProperties
  dd: HTMLElementProperties
  del: HTMLModElementProperties
  details: HTMLDetailsElementProperties
  dfn: HTMLElementProperties
  dialog: HTMLDialogElementProperties
  div: HTMLElementProperties
  dl: HTMLElementProperties
  dt: HTMLElementProperties
  em: HTMLElementProperties
  embed: HTMLEmbedElementProperties
  fieldset: HTMLFieldSetElementProperties
  figcaption: HTMLElementProperties
  figure: HTMLElementProperties
  footer: HTMLElementProperties
  form: HTMLFormElementProperties
  h1: HTMLElementProperties
  h2: HTMLElementProperties
  h3: HTMLElementProperties
  h4: HTMLElementProperties
  h5: HTMLElementProperties
  h6: HTMLElementProperties
  head: HTMLHeadElementProperties
  header: HTMLElementProperties
  hgroup: HTMLElementProperties
  hr: HTMLElementProperties
  html: HTMLHtmlElementProperties
  i: HTMLElementProperties
  iframe: HTMLIFrameElementProperties
  img: HTMLImageElementProperties
  input: HTMLInputElementProperties
  ins: HTMLModElementProperties
  kbd: HTMLElementProperties
  keygen: HTMLElementProperties
  label: HTMLLabelElementProperties
  legend: HTMLLegendElementProperties
  li: HTMLLIElementProperties
  link: HTMLLinkElementProperties
  main: HTMLElementProperties
  map: HTMLMapElementProperties
  mark: HTMLElementProperties
  menu: HTMLElementProperties
  menuitem: HTMLElementProperties
  meta: HTMLMetaElementProperties
  meter: HTMLMeterElementProperties
  nav: HTMLElementProperties
  noscript: HTMLElementProperties
  object: HTMLObjectElementProperties
  ol: HTMLOListElementProperties
  optgroup: HTMLOptGroupElementProperties
  option: HTMLOptionElementProperties
  output: HTMLOutputElementProperties
  p: HTMLParagraphElementProperties
  param: HTMLParamElementProperties
  picture: HTMLElementProperties
  pre: HTMLPreElementProperties
  progress: HTMLProgressElementProperties
  q: HTMLQuoteElementProperties
  rp: HTMLElementProperties
  rt: HTMLElementProperties
  ruby: HTMLElementProperties
  s: HTMLElementProperties
  samp: HTMLElementProperties
  script: HTMLScriptElementProperties
  section: HTMLElementProperties
  select: HTMLSelectElementProperties
  small: HTMLElementProperties
  source: HTMLSourceElementProperties
  span: HTMLElementProperties
  strong: HTMLElementProperties
  style: HTMLStyleElementProperties
  sub: HTMLElementProperties
  summary: HTMLElementProperties
  sup: HTMLElementProperties
  table: HTMLTableElementProperties
  tbody: HTMLTableSectionElementProperties
  td: HTMLTableCellElementProperties
  template: HTMLTemplateElementProperties
  textarea: HTMLTextAreaElementProperties
  tfoot: HTMLTableSectionElementProperties
  th: HTMLTableCellElementProperties
  thead: HTMLTableSectionElementProperties
  time: HTMLTimeElementProperties
  title: HTMLTitleElementProperties
  tr: HTMLTableRowElementProperties
  track: HTMLTrackElementProperties
  u: HTMLElementProperties
  ul: HTMLUListElementProperties
  var: HTMLElementProperties
  video: HTMLVideoElementProperties
  wbr: HTMLElementProperties
}
